// <auto-generated />
using System;
using KPICatalog.Infrastructure.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KPICatalog.API.Migrations
{
    [DbContext(typeof(KPICatalogDbContext))]
    partial class KPICatalogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("KPICatalog.Domain.Models.Entities.BonusScheme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CostCenter")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateStart")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ExternalId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDefaulBonusScheme")
                        .HasColumnType("boolean");

                    b.Property<int?>("PlanningCycleId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BonusSchemes");
                });

            modelBuilder.Entity("KPICatalog.Domain.Models.Entities.BonusSchemeObjectLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BonusSchemeId")
                        .HasColumnType("integer");

                    b.Property<int?>("LinkedObjectId")
                        .HasColumnType("integer");

                    b.Property<int?>("LinkedObjectTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BonusSchemeId");

                    b.HasIndex("LinkedObjectTypeId");

                    b.ToTable("BonusSchemeObjectLinks");
                });

            modelBuilder.Entity("KPICatalog.Domain.Models.Entities.LinkedObjectType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("LinkedObjectType");
                });

            modelBuilder.Entity("KPICatalog.Domain.Models.Entities.UserAccessControl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsAccessGranted")
                        .HasColumnType("boolean");

                    b.Property<string>("Login")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserAccessControls");
                });

            modelBuilder.Entity("KPICatalog.Domain.Models.Entities.BonusSchemeObjectLink", b =>
                {
                    b.HasOne("KPICatalog.Domain.Models.Entities.BonusScheme", "BonusScheme")
                        .WithMany("BonusSchemeObjectLinks")
                        .HasForeignKey("BonusSchemeId");

                    b.HasOne("KPICatalog.Domain.Models.Entities.LinkedObjectType", "LinkedObjectType")
                        .WithMany("BonusSchemeObjectLinks")
                        .HasForeignKey("LinkedObjectTypeId");

                    b.Navigation("BonusScheme");

                    b.Navigation("LinkedObjectType");
                });

            modelBuilder.Entity("KPICatalog.Domain.Models.Entities.BonusScheme", b =>
                {
                    b.Navigation("BonusSchemeObjectLinks");
                });

            modelBuilder.Entity("KPICatalog.Domain.Models.Entities.LinkedObjectType", b =>
                {
                    b.Navigation("BonusSchemeObjectLinks");
                });
#pragma warning restore 612, 618
        }
    }
}
